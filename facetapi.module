<?php

/**
 * @file
 * Contains facetapi.module
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityManagerInterface;
use Drupal\search_api\Entity\Index;
use Drupal\search_api\Query\QueryInterface;
use Drupal\facetapi\Entity\Facet;
use Drupal\Component\Plugin\PluginBase;

/**
 * Implements hook_help().
 */

function facetapi_help($route_name, RouteMatchInterface $route_match)
{
  switch ($route_name) {
    // Main module help for the facetapi module.
    case 'help.page.facetapi':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Facetapi test') . '</p>';
      return $output;
    break;
  }
}

/**
 * Implements hook_theme().
 */

function facetapi_theme()
{
  $theme = [];

  return $theme;
}


/**
 * Get all facet definitions.
 *
 * @return mixed
 */
function facetapi_get_enabled_facets() {
  $module_handler = \Drupal::service('module_handler');
  $facet_definitions = $module_handler->invokeAll('facetapi_facet_info');
  return $facet_definitions;
}

/**
 * Implements hook_entity_type_build().
 */
function facetapi_entity_type_build(array &$entity_types) {
  /** @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  $entity_types['search_api_index']
    ->setFormClass('facets', 'Drupal\facetapi\Form\IndexFacetsForm');
}


/**
 * Implementation of hook_search_api_query_alter.
 *
 * @param \Drupal\search_api\Query\QueryInterface $query
 */
function facetapi_search_api_query_alter(QueryInterface &$query) {
  // Get the adapter derivative.
  // Get the plugin manager.
  /** @var \Drupal\facetapi\Adapter\AdapterPluginManagerInterface $plugin_manager */
  $plugin_manager = \Drupal::service('plugin.manager.facetapi.adapter');

  // Get the searcher id.
  // This is the id of the view.
  $search_id = $query->getOption('search id');

  $plugin_id = 'search_api_views';

  $adapter = $plugin_manager->getMyOwnChangeLaterInstance($plugin_id, $search_id);

  // Add the active filters.
  $adapter->alterQuery($query);

}

function facetapi_facetapi_facet_info() {
  $facet_info = array();
  // Load all views.
  /**
   * @var EntityManagerInterface
   */
  $entity_manager = \Drupal::entityManager();
  // @TODO: filter on search api views.
  $views = $entity_manager->getStorage('view')->loadMultiple();
  // Get the views executable factory.
  $views_executable_factory = Drupal::service('views.executable');
  foreach ($views as $view_id => $view_entity) {
    $view = $views_executable_factory->get($view_entity);
    // Determine if the view is an search api view.
    if (substr($view->storage->get('base_table'), 0, 17) == 'search_api_index_') {
      // Get the view id.
      $view_id = $view->id();
      $index_id = substr($view->storage->get('base_table'), 17);
      $index = Index::load($index_id);
      // Get fields.
      $fields = $index->getFields();
      // Add facets for each view display which is of type page or block.
      foreach ($view->storage->get('display') as $display) {
        $supported_display_plugins = array(
          'page',
          'block',
        );
        if (in_array($display['display_plugin'], $supported_display_plugins)) {
          // @TODO: This should be a function in search api. Look it up.
          $searcher_name = 'search_api_views:' . $view_id . ':' . $display['id'];
          foreach ($fields as $field_name => $field) {
            if ( empty($facet_info[$searcher_name])) {
              $facet_info[$searcher_name] = array();
            }
            // Determine the query type.
            $term_types = array(
              'string',
              'integer',
            );
            if (in_array($field->getType(), $term_types)) {
//              $properties = array(
//                'name' => $field_name,
//                'label' => $field->getLabel(),
//                'field' => $field->getFieldIdentifier(),
//                'query type plugin' => 'search_api_term',
//                'searcher' => $searcher_name,
//              );
              $properties = array(
                'name' => $field_name,
                'label' => $field->getLabel(),
                'field_identifier' => $field->getFieldIdentifier(),
                'query_type_name' => 'search_api_term',
                'searcher_name' => $searcher_name,
              );


              $facet = Facet::create($properties);


              $facet_info[$searcher_name][$field_name] = $facet;
            }

          }

        }
      }
    }
  }
  return $facet_info;
}